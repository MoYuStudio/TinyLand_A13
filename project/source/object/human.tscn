[gd_scene load_steps=4 format=3 uid="uid://bs0h21pk82mqm"]

[sub_resource type="GDScript" id="GDScript_spill"]
script/source = "
extends CharacterBody3D


const SPEED = 5.0
const JUMP_VELOCITY = 4.5

# Get the gravity from the project settings to be synced with RigidBody nodes.
var 重力 = ProjectSettings.get_setting('physics/3d/default_gravity')


func _physics_process(delta):
	# Add the gravity.
	if not is_on_floor():
		velocity.y -= 重力 * delta

	# Handle Jump.
	#if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
	#	velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	#var input_dir = Input.get_vector(\"ui_left\", \"ui_right\", \"ui_up\", \"ui_down\")
	#var direction = (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	#if direction:
	#	velocity.x = direction.x * SPEED
	#	velocity.z = direction.z * SPEED
	#else:
	#	velocity.x = move_toward(velocity.x, 0, SPEED)
	#	velocity.z = move_toward(velocity.z, 0, SPEED)
	velocity.x = 1
	move_and_slide()
"

[sub_resource type="CapsuleMesh" id="CapsuleMesh_dl5nh"]

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_ex6hc"]

[node name="Human" type="CharacterBody3D"]
script = SubResource("GDScript_spill")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
mesh = SubResource("CapsuleMesh_dl5nh")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("CapsuleShape3D_ex6hc")
